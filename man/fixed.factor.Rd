% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hello.R
\name{fixed.factor}
\alias{fixed.factor}
\title{Fixed factors}
\usage{
fixed.factor(name, levels, replications = 1L, blocked = F,
  character.as.factor = T, is.ordered = F,
  block.name = "\%1$s.\%2$d", groups = character(0), ...)
}
\arguments{
\item{name}{Name of the fixed factor.}

\item{levels}{A vector of factor levels. Any atomic data type (character, logical, numeric, integer) can be used.}

\item{replications}{Either a single integer or an integer vector of the same length as `levels` that is used to determine how many times each factor level should be repeated.}

\item{blocked}{Set this to TRUE if the levels of this factor are blocked. In that case, a factor is created whose factor levels are different sequences of the levels specified in the function call.}

\item{character.as.factor}{If this is `TRUE`, character vectors passed in `levels` are automatically converted to a factor type.}

\item{block.name}{If `blocked`, by default, there is not only a design matrix column created that contains the complete sequence of block levels but also a column for each position of the sequence with its assigned level. You may specify a different naming pattern using [sprintf()] naming conventions. The first argument passed is the factor name and the second argument is the sequence position (starting at 1). The default column names will be `factor.1`, `factor.2`, ect. If `NULL`, no additional block columns are created.}

\item{groups}{Names of fixed factors in which to nest this fixed factor (see *Nesting fixed factors*).}

\item{assign}{If `blocked = TRUE`, you may specify a different method of rotating levels. The default if 'latin.square' but 'permutations' and 'random.order'are also available.}
}
\value{
An instance of `fixed.factor`.
}
\description{
This function creates an instance of fixed.factor to be used in a `factor.design`. Fixed factors typically relate to (quasi-)experimental factors such as experimental conditions/manipulations, subject/item characteristics ect.
}
\section{Nesting Fixed Factors}{

If `groups` is used, the function will attempt to nest levels of the newly created factor within levels/interactions of the specified grouping factors. Note that nesting of fixed effects is only allowed within other fixed effects combinations but not within random effects.
}

\examples{
fixed.factor("correct", levels=c(T, F))
~correct[T, F]
fixed.factor("age", levels=c("child", "youth", "adult"))
~age[child, youth, adult]
fixed.factor("order", levels=c("task1", "task2", "task3"), assign="latin.square")
~order[task1, task2, task3, blocked = T]

}
\seealso{
[random.factor()]
}
